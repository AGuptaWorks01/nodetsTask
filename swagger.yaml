openapi: 3.0.0
info:
  title: Task Manager API
  version: "1.0.0"
  description: Task Manager with JWT Auth (Express + TypeScript + MongoDB)

servers:
  - url: http://localhost:4000/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Auth
    description: Authentication endpoints
  - name: Tasks
    description: Task management endpoints

paths:
  /auth/register:
    post:
      tags: [Auth]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  example: test@example.com
                password:
                  type: string
                  example: secret123
      responses:
        "201":
          description: User registered successfully
        "400":
          description: User already exists

  /auth/login:
    post:
      tags: [Auth]
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  example: test@example.com
                password:
                  type: string
                  example: secret123
      responses:
        "200":
          description: Login successful (returns JWT)
        "400":
          description: Invalid credentials

  /tasks:
    get:
      tags: [Tasks]
      summary: Get all tasks
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of tasks
    post:
      tags: [Tasks]
      summary: Create a new task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title]
              properties:
                title:
                  type: string
                  example: Buy Milk
                description:
                  type: string
                  example: 2 litres
      responses:
        "201":
          description: Task created

  /tasks/{id}:
    put:
      tags: [Tasks]
      summary: Update a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Updated Title
                description:
                  type: string
                  example: Updated Description
                status:
                  type: string
                  enum: [pending, completed]
      responses:
        "200":
          description: Task updated
        "404":
          description: Task not found

    delete:
      tags: [Tasks]
      summary: Delete a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Task deleted
        "404":
          description: Task not found
